[0.000000] (-) TimerEvent: {}
[0.000252] (lidar_liskarm_v1) JobQueued: {'identifier': 'lidar_liskarm_v1', 'dependencies': OrderedDict()}
[0.000511] (lidar_liskarm_v1) JobStarted: {'identifier': 'lidar_liskarm_v1'}
[0.005700] (lidar_liskarm_v1) JobProgress: {'identifier': 'lidar_liskarm_v1', 'progress': 'cmake'}
[0.006157] (lidar_liskarm_v1) JobProgress: {'identifier': 'lidar_liskarm_v1', 'progress': 'build'}
[0.006553] (lidar_liskarm_v1) Command: {'cmd': ['/usr/bin/cmake', '--build', '/workspaces/LiDAR-Liskarm-v1/build/lidar_liskarm_v1', '--', '-j16', '-l16'], 'cwd': '/workspaces/LiDAR-Liskarm-v1/build/lidar_liskarm_v1', 'env': OrderedDict([('HOSTNAME', 'e05c8736f431'), ('GIT_ASKPASS', '/vscode/vscode-server/bin/linux-x64/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/vscode/vscode-server/bin/linux-x64/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/bin/helpers/browser.sh'), ('AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS', '1'), ('HOME', '/home/ros'), ('OLDPWD', '/workspaces/LiDAR-Liskarm-v1/src'), ('TERM_PROGRAM_VERSION', '1.89.1'), ('VSCODE_IPC_HOOK_CLI', '/tmp/vscode-ipc-9993d87c-1360-4a7c-b674-e40fa2eaeb2f.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/vscode/vscode-server/bin/linux-x64/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/vscode/vscode-server/bin/linux-x64/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/node'), ('COLORTERM', 'truecolor'), ('REMOTE_CONTAINERS', 'true'), ('WAYLAND_DISPLAY', 'vscode-wayland-f15ddfa4-6151-447e-8197-56e2753a1297.sock'), ('COLCON_PREFIX_PATH', '/opt/ros/humble'), ('ROS_DISTRO', 'humble'), ('REMOTE_CONTAINERS_IPC', '/tmp/vscode-remote-containers-ipc-16890fe4-54b0-4a30-b492-4a941ce23256.sock'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/vscode/vscode-server/bin/linux-x64/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/bin/remote-cli:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('XDG_RUNTIME_DIR', '/tmp/user/1000'), ('REMOTE_CONTAINERS_SOCKETS', '["/tmp/.X11-unix/X0","/home/ros/.gnupg/S.gpg-agent"]'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/tmp/user/1000/vscode-git-0a3ab30b47.sock'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('DEBIAN_FRONTEND', ''), ('REMOTE_CONTAINERS_DISPLAY_SOCK', '/tmp/.X11-unix/X0'), ('SHELL', '/bin/bash'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/workspaces/LiDAR-Liskarm-v1/build/lidar_liskarm_v1'), ('PYTHONPATH', '/opt/ros/humble/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.032749] (lidar_liskarm_v1) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target liskarm_main\x1b[0m\n'}
[0.042786] (lidar_liskarm_v1) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/liskarm_main.dir/src/main.cpp.o\x1b[0m\n'}
[0.099912] (-) TimerEvent: {}
[0.200329] (-) TimerEvent: {}
[0.300855] (-) TimerEvent: {}
[0.401203] (-) TimerEvent: {}
[0.501571] (-) TimerEvent: {}
[0.601993] (-) TimerEvent: {}
[0.702491] (-) TimerEvent: {}
[0.802821] (-) TimerEvent: {}
[0.903122] (-) TimerEvent: {}
[1.003452] (-) TimerEvent: {}
[1.103764] (-) TimerEvent: {}
[1.204116] (-) TimerEvent: {}
[1.304447] (-) TimerEvent: {}
[1.404776] (-) TimerEvent: {}
[1.505217] (-) TimerEvent: {}
[1.519306] (lidar_liskarm_v1) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/workspaces/LiDAR-Liskarm-v1/src/lidar_liskarm_v1/src/main.cpp:2\x1b[m\x1b[K:\n'}
[1.519679] (lidar_liskarm_v1) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (Liskarm_Main::*)()>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.519743] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (Liskarm_Main::*)()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.519971] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (Liskarm_Main::*)(); _BoundArgs = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.520014] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/LiDAR-Liskarm-v1/src/lidar_liskarm_v1/src/main.cpp:20:33:\x1b[m\x1b[K   required from here\n'}
[1.520041] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[1.520067] (lidar_liskarm_v1) StderrLine: {'line': b'  755 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[1.520090] (lidar_liskarm_v1) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[1.520113] (lidar_liskarm_v1) StderrLine: {'line': b'  756 | \x1b[01;31m\x1b[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[1.520136] (lidar_liskarm_v1) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.520158] (lidar_liskarm_v1) StderrLine: {'line': b'  757 | \x1b[01;31m\x1b[K                    : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[1.520180] (lidar_liskarm_v1) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.520202] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (0 >= (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)) : (0 == (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[1.520227] (lidar_liskarm_v1) StderrLine: {'line': b'/usr/include/c++/11/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (Liskarm_Main::*)(); _CallArgs = _CallArgs; _BArgs = {}; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.520259] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:468:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::_Bind<void (Liskarm_Main::*())()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.520283] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/LiDAR-Liskarm-v1/src/lidar_liskarm_v1/src/main.cpp:20:33:\x1b[m\x1b[K   required from here\n'}
[1.520305] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:464:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::result_of<void (Liskarm_Main::*&())()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.520328] (lidar_liskarm_v1) StderrLine: {'line': b'  464 |         using \x1b[01;31m\x1b[K_Res_type_impl\x1b[m\x1b[K\n'}
[1.520361] (lidar_liskarm_v1) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.520394] (lidar_liskarm_v1) StderrLine: {'line': b'/usr/include/c++/11/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (Liskarm_Main::*)(); _CallArgs = std::tuple<_Tps ...>; _BArgs = {}; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.520421] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:468:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<_Tps ...>; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.520449] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:501:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::_Bind<void (Liskarm_Main::*())()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.520475] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/workspaces/LiDAR-Liskarm-v1/src/lidar_liskarm_v1/src/main.cpp:20:33:\x1b[m\x1b[K   required from here\n'}
[1.520502] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:464:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::result_of<void (Liskarm_Main::*&())()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.605325] (-) TimerEvent: {}
[1.705624] (-) TimerEvent: {}
[1.805925] (-) TimerEvent: {}
[1.906217] (-) TimerEvent: {}
[1.980414] (lidar_liskarm_v1) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:30\x1b[m\x1b[K,\n'}
[1.980627] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.980677] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.980704] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.980737] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.980760] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.980783] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.980807] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.980830] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.980873] (lidar_liskarm_v1) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/workspaces/LiDAR-Liskarm-v1/src/lidar_liskarm_v1/src/main.cpp:6\x1b[m\x1b[K:\n'}
[1.980900] (lidar_liskarm_v1) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.980928] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.980953] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:\x1b[m\x1b[K   required from here\n'}
[1.980976] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:244:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for call to \xe2\x80\x98\x1b[01m\x1b[K(std::_Bind<void (Liskarm_Main::*())()>) ()\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.981001] (lidar_liskarm_v1) StderrLine: {'line': b'  244 |     \x1b[01;31m\x1b[Kcallback_()\x1b[m\x1b[K;\n'}
[1.981023] (lidar_liskarm_v1) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~^~\x1b[m\x1b[K\n'}
[1.981045] (lidar_liskarm_v1) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/workspaces/LiDAR-Liskarm-v1/src/lidar_liskarm_v1/src/main.cpp:2\x1b[m\x1b[K:\n'}
[1.981068] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:501:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) [with _Args = {_Args ...}; _Result = _Result; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.981091] (lidar_liskarm_v1) StderrLine: {'line': b'  501 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args)\n'}
[1.981114] (lidar_liskarm_v1) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.981135] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:501:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.981160] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:513:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const [with _Args = {_Args ...}; _Result = _Result; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.981185] (lidar_liskarm_v1) StderrLine: {'line': b'  513 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args) const\n'}
[1.981207] (lidar_liskarm_v1) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.981227] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:513:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.990361] (lidar_liskarm_v1) StderrLine: {'line': b'/usr/include/c++/11/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (Liskarm_Main::* const)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.990643] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:475:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_const; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.990684] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:510:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.990716] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.990793] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:\x1b[m\x1b[K   required from here\n'}
[1.990829] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:464:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::result_of<void (Liskarm_Main::* const&())()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.990875] (lidar_liskarm_v1) StderrLine: {'line': b'  464 |         using \x1b[01;31m\x1b[K_Res_type_impl\x1b[m\x1b[K\n'}
[1.990902] (lidar_liskarm_v1) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.990926] (lidar_liskarm_v1) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.990958] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.990982] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:\x1b[m\x1b[K   required from here\n'}
[1.991005] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:531:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.991035] (lidar_liskarm_v1) StderrLine: {'line': b'  531 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args) volatile\n'}
[1.991058] (lidar_liskarm_v1) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.991080] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:531:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.991104] (lidar_liskarm_v1) StderrLine: {'line': b'/usr/include/c++/11/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (Liskarm_Main::* volatile)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.991129] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:475:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_volatile; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.991155] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:528:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.991178] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.991201] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:\x1b[m\x1b[K   required from here\n'}
[1.991655] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:464:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::result_of<void (Liskarm_Main::* volatile&())()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.991774] (lidar_liskarm_v1) StderrLine: {'line': b'  464 |         using \x1b[01;31m\x1b[K_Res_type_impl\x1b[m\x1b[K\n'}
[1.991875] (lidar_liskarm_v1) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.991983] (lidar_liskarm_v1) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.992098] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.992196] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:\x1b[m\x1b[K   required from here\n'}
[1.992274] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:543:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.992393] (lidar_liskarm_v1) StderrLine: {'line': b'  543 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K()(_Args&&... __args) const volatile\n'}
[1.992500] (lidar_liskarm_v1) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.992580] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:543:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.992651] (lidar_liskarm_v1) StderrLine: {'line': b'/usr/include/c++/11/functional: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (Liskarm_Main::* const volatile)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.992722] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:475:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_cv; _Functor = void (Liskarm_Main::*)(); _Bound_args = {}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.992809] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:540:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.992917] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (Liskarm_Main::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.993001] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:\x1b[m\x1b[K   required from here\n'}
[1.993071] (lidar_liskarm_v1) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:464:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::result_of<void (Liskarm_Main::* const volatile&())()>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.993138] (lidar_liskarm_v1) StderrLine: {'line': b'  464 |         using \x1b[01;31m\x1b[K_Res_type_impl\x1b[m\x1b[K\n'}
[1.993204] (lidar_liskarm_v1) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.006374] (-) TimerEvent: {}
[2.082786] (lidar_liskarm_v1) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/liskarm_main.dir/build.make:76: CMakeFiles/liskarm_main.dir/src/main.cpp.o] Error 1\n'}
[2.083859] (lidar_liskarm_v1) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/liskarm_main.dir/all] Error 2\n'}
[2.083973] (lidar_liskarm_v1) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[2.085105] (lidar_liskarm_v1) CommandEnded: {'returncode': 2}
[2.106543] (-) TimerEvent: {}
[2.107128] (lidar_liskarm_v1) JobEnded: {'identifier': 'lidar_liskarm_v1', 'rc': 2}
[2.118109] (-) EventReactorShutdown: {}
